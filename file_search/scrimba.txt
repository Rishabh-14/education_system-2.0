bob's role is one of the most viewed
react instructors in the world
and now he's back with a brand new
complete react course that will teach
you modern react using patterns like
functional components and hooks
if you want to learn the react
javascript library this is the video
hey free code campers welcome to my
newest course on learning react
in this course you're going to solve
over 140 different coding challenges and
work on eight different projects all of
which have an associated figma design
file to guide your work
and you actually have two options for
following along either by using your
local machine i actually have a few
lessons that will show you how to do
that starting pretty early in this
course
or you can head over to scrimba.com
where there's an interactive version of
this course so that you can solve the
challenges directly in your browser
it's totally up to you what you want to
do the link to the course on
scrimmage.com is provided below
and actually this course is part of a
larger front-end career path which we
have at scrimba which takes people from
zero to hirable as a front-end developer
this course is module 11 in that career
path and my more advanced react course
immediately follows this free react
course as module 12 where i go even more
in depth into react react router using
the context api and so much more if
those topics sound confusing to you
don't worry at all you don't need to
take them to understand this course
now i always appreciate any feedback you
have for me about the course so you're
welcome to reach out to me on twitter at
bobsarole or if you have any questions
about your specific code the best place
for those is to either reach out to the
free codecamp forums or discord server
or you can check out scrimba's own
discord server which is becoming a more
and more deeply integrated part of the
whole scrimba.com experience
and with that good luck and have a ton
of fun learning react
hey there and welcome to the learn react
module i'm super excited you're joining
me for this course because by the end
you'll have built not one not two but at
least eight projects using react there's
so many of them i don't even have time
to go over each one of them in detail
right now i could barely even fit them
on this slide so why are we doing so
many projects well it's because i
designed the curriculum for this course
to be project driven in each of the
sections we will start with a goal
project that we are working toward and
then we'll learn everything we need in
order to build that project now in order
for that approach to actually work i'm
going to be asking a lot from you so
let's talk for just a bit on how you can
get the most from this course
just like everything in life what you
put into this course is what you will
get out of it or as i like to say my
philosophy about learning is that the
easiest way to learn something is to do
it the hard way in this course i'm going
to be asking you to do a lot of the work
for much of it you'll have me there
after each challenge to walk you through
a solution but for some of it you won't
either way what i'm asking of you now is
to avoid the trap of tutorial hell where
you end up passively watching me do all
the work remember this is not school
you're presumably here because you
actually want to finish the course with
the ability to write react code by
yourself
school has taught a lot of us that the
goal of learning is to get a good grade
in fact i heard something really
interesting that said that education is
the only thing that humans try to get
less out of than what they paid for so
don't let that be you in this course if
you really give it everything you've got
meaning you do all the challenges and
projects you're involved with the
community and you are an active
participant in your own learning i can
promise that you'll probably finish off
in a better spot than many students
getting their degree in computer science
and i really don't say that lightly
along those lines remember that space
learning and repetition are your best
friends binging the course from
beginning to end even if you are doing
all the assignments is kind of like
trying to run an ultra marathon without
training your brain actually needs rest
so take breaks often by taking this
course the goal isn't just to get to the
end it's to get to the end with some
honest-to-goodness react skills then
after you come back to this course on
maybe the next day don't be afraid to
re-watch some of the past lessons and
even redo some of the past challenges
because repetition really is your best
friend whenever you're trying to learn
something new
so what should you already know coming
into this course before jumping into
react you should have a solid grasp of
the fundamentals of web development
namely html css javascript and
preferably a pretty solid understanding
of the new syntax that was introduced
back in ecmascript 6 es6 and above
if you're feeling at all rusty on any of
these topics you can click the logo for
each one of these which will send you to
another free course here on scrimba
where you can brush up on those skills
my name is bob zaroll i'm going to be
your instructor throughout this whole
course my username pretty much
everywhere online is bob zaroll but
these days i'm really most active on
twitter you can click the twitter icon
to go to my profile if you want to
follow me that would be great and so
without any further delay let's jump
right in and start learning react
in the first section of this course
we're going to be learning everything we
need in order to build a basic static
page using react and i know what you
might be thinking but i already know how
to make static web pages i know you're
probably super excited to really dive in
and learn dynamic web applications with
react and we are going to get there in
this course but in order to start off
this section is all about learning the
basic syntax and you could say the
vocabulary of react because i found that
the best approach to learning react is
to first start learning how to think in
react
the reason for this is because react
really does kind of change the game in
terms of how you build applications
later in this section we are going to
start learning the differences between
declarative and imperative programming
and you're going to find that react
approaches web development in a
completely different way so the point is
we're first going to be dialing in our
brains to start thinking in terms of
using react to build websites by first
building some static web pages not
unlike the ones that you normally would
just use html and css for so this might
not seem terribly exciting right now but
i think you'll soon see that writing
composable reusable components in react
can actually be a bit addicting and
pretty fun
so i know that you'll find a lot of
benefit in starting off with the milk
before we get to the meat or of course
we have a vegetarian option as well
the content in this section will be
driven forward by the goal of creating
our first static web page in react and
that's the page you see here in the
screenshot that has a list of fun facts
about react now this screenshot is
actually also a link to the figma file
for the design of this page so if you
click this screenshot it will open up in
figma you'll have to make sure that you
log into your figma account if you don't
have one yet it's free to create and
clicking the screenshot will lead you to
a sort of shared file that everyone will
have access to
in that shared file you'll see something
near the top that looks kind of like
this where it's got react facts and then
this little drop down arrow your best
bet is going to be to click that drop
down arrow go over to duplicate to your
drafts and click that
duplicating this design to your own
drafts is going to make it possible for
you not only to edit the design if you
want to change it a little bit but also
to help you avoid any distraction you
might see on the design page of anybody
else's cursors or maybe some comments
that they may have left
so i'll go back to this design here make
sure to click on it now so at least the
url gets saved up in your tabs in your
browser
and lastly we're going to look at the
different topics that we'll be covering
in this section
so what are we going to learn about well
first we're going to learn why we even
care about react in the first place i
think knowing why react is so exciting
and so popular will help make your
learning journey of react a much simpler
one because you'll be so excited about
what you'll be able to create in the end
by using react
we'll also be talking about a
proprietary react syntax called jsx and
we'll get to see how that sort of
changed the game for react and made
writing react a much more familiar
experience
then we'll dive into creating custom
components and you'll learn all about
what that means and how to actually do
that yourself in react
and of course in order to build our
project we're going to need to know how
to apply css styling
again the goal is for us to be able to
build this simple static page in react
i'm really excited for us to get started
so without any further ado let's jump
right into the deep end and start
writing our first react code
before we just jump right into theory
and why we care about react and how all
the little pieces of react work i want
to get your hands on the keyboard typing
some react code as soon as possible
mostly just to show you that react is
not a scary library to be working with
so let's see how we can set up react now
i like to think of there as being an
easy way to set up react in your project
and a correct way of setting react up in
your project for our sake in learning
we're going to start with the easy way
which will also make it so that you can
actually just do this in your local
environment hopefully you're following
along here on scrimba.com but if you're
curious and you're interested you can
always do this on your local environment
as well now you can see i have a very
basic html page set up i have nothing in
my javascript at all my css is minimal
and we're going to walk through this
together now i have some slides here and
you can actually click on this
screenshot and that will send you to
this exact page in the react
documentation it tells you how you can
include react into your project and we
can actually pull in these libraries
that we need straight from a cdn in
other words we can just copy these two
script tags here and start writing react
code there's a little more to it but
what i'm going to do is click here and
that's going to open me up to the react
page i'm just going to copy the two
script tags that you can see
and over in my index html i'm going to
put it in the head here
let me fix the indentation and i've
pulled in the react library and another
library called react dom theoretically
this is all i need in order to start
writing some react code now i'm going to
take it one step further and that's
because just pulling and reacting react
dom is going to be pretty extremely
limiting in terms of using the power of
react unless we also pull in something
called babble i'm not gonna jump in too
deep into why we need to pull in babel
for now all i'm going to do is click on
this screenshot here which will take me
again to a page where i can copy the
script tag that you see
and i will paste that in underneath this
script tag and if we look really closely
below here it says you can use any jsx
we'll cover what jsx is later in any
script tag by adding type equals text
slash babble so i'm going to do that
here in my script tag down here type
equals text slash babble
and that's all the setup we really need
by pulling in the react
dom library in this script tag i now
have access to a global variable called
react dom i'm going to use that to
render something to the screen once
again i'm going to be covering
everything that we're talking about here
it's totally okay if this is moving
pretty quickly reactdom.render allows me
to render something that looks very much
like html now this might be blowing your
mind a little bit because it probably
looks a little strange writing some html
inside of my javascript we're going to
see how this is kind of one of the
beautiful things that react has added so
that we can write really declarative
code now let's put something inside this
h1 that's meaningful we had hello react
over here maybe i'll say hello
everyone okay in my index.html i'm going
to get rid of this h1 so we're not
confusing this h1 with what i'm seeing
over here now reactdom.render the first
thing is what do i want to render to the
screen the second thing is where do i
want to render it well let's go to our
html and i'm going to create a div here
just a completely empty div and i'm
going to give it an id so that i can
select it we'll call it root because
this is going to be like the root of our
entire application i like to think of
this div as a container for the entire
website that we're going to build in
react and now that i have a place where
i can put my h1 here i'm going to select
it with a regular dom api
document.getelementbyid root
and surprise we've written some react
code i'm going to hit save
we'll see that it tells me hello
everyone in a single line of code i was
able to use react to insert something
that looks very much like an h1
obviously this is a little different
because we're still inside javascript
and i was able to put it right inside of
this real dom element in our index.html
now i have an entire lesson that's
dedicated to understanding exactly
what's going on here but in an effort to
get your hands on the code get a quick
win for you to see that you can write
react and it's not too scary i'm going
to give you a few seconds of silence
where you can pause the screencast and
study this line of code and then i'll be
erasing it and letting you type it again
from scratch in fact let me write that
down as a little challenge here
okay pause the screencast here spend
just a minute memorizing this line of
code do that now
and then i will add a little comment
with the next part
okay your time to shine rewrite the line
of code as best you can from memory you
don't have to put hello everyone or
hello react or whatever you even don't
have to use an h1 like i did you can put
whatever html you want in there so pause
the screencast now and work on that
because i pulled in that reacts dom
library in my cdn i have a global
variable called react dom and it has a
render method which allows us to render
something to the screen or kind of in
other words place something on the
screen and i don't know let's let's do a
paragraph this time just to switch it up
a tiny bit
say hi my name is bob
okay so that's the element that i want
to place inside of this div again this
div is a container for the actual
elements that i plan on putting on the
screen and the second parameter that i
need to include with reactdom.render is
you could think of it as a dom node that
i have to go select with
document.getelementbyid
or because i can also get dom nodes with
something like query selector that would
work just as well in this case i'd have
to put hash mark root because that's how
query selector works it's the id of root
just so this isn't confusing we'll just
keep it as get element by id for now but
just so you know either one should work
just fine so the first parameter is what
do i want to place on the screen and the
second one is where should i be placing
this i imagine under the hood what
render is doing is it's taking this dom
element that we are grabbing with
by id and it's running something similar
to dot append or dot append child to it
and what is it appending it's appending
this paragraph we're going to see that
it's a little more complicated than that
but that's a good way to kind of build a
mental model for yourself as to how this
is actually working so i haven't
refreshed the page yet which is why this
still says hello everyone i'm going to
hit save which will refresh my browser
and there we go hi my name is bob this
time it's a paragraph instead of a
header element and that's awesome we
have written react in a single line of
code you might have noticed that our
console is popping up with this error
you're using the in-browser babel
transformer be sure to pre-compile your
scripts for production a bunch of jargon
here that may not totally make sense to
you and that's fine that's a symptom of
us setting up react the easy way instead
of the correct way soon down the road
we'll be kind of shifting our setup here
and that warning will go away and
awesome okay because this is scrimba you
can always delete this if maybe you
weren't able to memorize that you can
try deleting it rewriting it again from
scratch practice with it i'm going to
ask you to do that a million times
throughout this course because the only
way to learn react is to write react as
much as you can now i have found it
really helpful for my own learning to
understand why the heck i even care
about react in the first place so in the
next couple screencasts we're going to
be talking about some of those really
awesome benefits that come with using
react as our library for building web
applications but as always if you want
to spend more time with this go ahead
and do that pause click into the editor
start typing what you want to type
practice it and when you're ready i will
see you in the next lesson
surprise if you know my teaching style i
wanted to include a practice in here
essentially you're just going to be
rewriting that same line of code that we
just wrote in the last lesson however
this time we'll extend it just a little
bit i want you to see if you can figure
out how to render an unordered list with
two or more list items inside last time
we just rendered a paragraph you can see
it's still kind of left over here if i
refresh that that'll disappear i've left
the entire setup here for you we're
still pulling in the script tags for
react react dom and babel so essentially
your main focus is just to rewrite that
same one liner of code but see if you
can figure out how to add a couple more
elements inside like having an unordered
list with some nested list items pause
here and try to work on that challenge
okay pulling in the react dom library
that gives us access to a render method
before we did a simple paragraph like
this and put some code inside however i
can put this as an unordered list
and then just actually stick some list
items inside of here
so it's going to look a little confusing
at first i'll clean it up in just a
minute we have
list item we'll just say thing one
and i'll do another list item
here
thing two
okay now i'm going to move this onto its
own line here this whole html thing
right there and the second parameter i
need to separate with a comma is where
to put this so i'm g